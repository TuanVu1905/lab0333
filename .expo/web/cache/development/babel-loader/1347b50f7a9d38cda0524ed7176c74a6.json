{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\NHOM_5_FOOD_ORDERING_17DTHD1\\\\NHOM_5_FOOD_ORDERING_17DTHD1\\\\RN-AppFood\\\\src\\\\screens\\\\LoginScreen.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { onUserLogin, onUserSignUp, onOTPRequest, onVerify, onUserLoginGG } from \"../redux\";\nimport { TextField } from \"../component\";\nimport { connect } from 'react-redux';\nimport { ButtonWithTitle } from \"../component/ButtonWithTitle\";\nimport { useNavigation } from \"../utils\";\nimport * as Google from 'expo-google-app-auth';\nimport * as Facebook from 'expo-facebook';\n\nvar _LoginScreen = function _LoginScreen(_ref) {\n  var onUserLogin = _ref.onUserLogin,\n      onUserSignUp = _ref.onUserSignUp,\n      userReducer = _ref.userReducer,\n      Account = _ref.Account,\n      onUserLoginGG = _ref.onUserLoginGG;\n\n  var _useNavigation = useNavigation(),\n      navigate = _useNavigation.navigate;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSignUp = _useState2[0],\n      setIsSignUp = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      vertified = _useState4[0],\n      setVertified = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoginGG = _useState6[0],\n      setIsLoginGG = _useState6[1];\n\n  var user = userReducer.user,\n      userGG = userReducer.userGG;\n\n  function signInWithGoogleAsync() {\n    var result;\n    return _regeneratorRuntime.async(function signInWithGoogleAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Google.logInAsync({\n              androidClientId: '237033973781-habtir4dmjr82b3teqb9l44743n5237s.apps.googleusercontent.com',\n              scopes: ['profile', 'email']\n            }));\n\n          case 3:\n            result = _context.sent;\n\n            if (!(result.type === 'success')) {\n              _context.next = 10;\n              break;\n            }\n\n            onUserLoginGG(result);\n            setIsLoginGG(true);\n            return _context.abrupt(\"return\", {\n              token: result.accessToken,\n              isNavigate: true\n            });\n\n          case 10:\n            return _context.abrupt(\"return\", {\n              cancelled: true\n            });\n\n          case 11:\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", {\n              error: _context.t0\n            });\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 13]], Promise);\n  }\n\n  function logIn() {\n    var res, response, message;\n    return _regeneratorRuntime.async(function logIn$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(Facebook.initializeAsync({\n              appId: '787040031882663'\n            }));\n\n          case 3:\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(Facebook.logInWithReadPermissionsAsync({\n              permissions: ['public_profile']\n            }));\n\n          case 5:\n            res = _context2.sent;\n\n            if (!(res.type === 'success')) {\n              _context2.next = 19;\n              break;\n            }\n\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(fetch(\"https://graph.facebook.com/me?access_token=\" + res.token));\n\n          case 9:\n            response = _context2.sent;\n            _context2.t0 = Alert;\n            _context2.next = 13;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 13:\n            _context2.t1 = _context2.sent.name;\n            _context2.t2 = \"Hi \" + _context2.t1;\n            _context2.t3 = _context2.t2 + \"!\";\n\n            _context2.t0.alert.call(_context2.t0, 'Logged in!', _context2.t3);\n\n            _context2.next = 19;\n            break;\n\n          case 19:\n            _context2.next = 25;\n            break;\n\n          case 21:\n            _context2.prev = 21;\n            _context2.t4 = _context2[\"catch\"](0);\n            message = _context2.t4.message;\n            alert(\"Facebook Login Error: \" + message);\n\n          case 25:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 21]], Promise);\n  }\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      email = _useState8[0],\n      setEmail = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      phone = _useState10[0],\n      setPhone = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      password = _useState12[0],\n      setPassword = _useState12[1];\n\n  var _useState13 = useState('Login'),\n      _useState14 = _slicedToArray(_useState13, 2),\n      title = _useState14[0],\n      setTitle = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      otp = _useState16[0],\n      setOtp = _useState16[1];\n\n  var _useState17 = useState('Request a new OTP in'),\n      _useState18 = _slicedToArray(_useState17, 2),\n      requestOtpTitle = _useState18[0],\n      setRequestOtpTitle = _useState18[1];\n\n  var _useState19 = useState(true),\n      _useState20 = _slicedToArray(_useState19, 2),\n      canRequestOtp = _useState20[0],\n      setCanRequestOtp = _useState20[1];\n\n  var onTapOption = function onTapOption() {\n    setIsSignUp(!isSignUp);\n    setTitle(!isSignUp ? 'SignUp' : 'SignIn');\n  };\n\n  var onTapAuthenticate = function onTapAuthenticate() {\n    if (isSignUp) {\n      onUserSignUp(email, password, phone);\n    } else {\n      onUserLogin(email, password);\n    }\n  };\n\n  var countDown;\n  useEffect(function () {\n    if (user.vertified !== undefined) {\n      if (user.vertified === true) {\n        navigate('CartPage');\n      } else {\n        setVertified(user.vertified);\n      }\n    }\n\n    onEnableOtpRequest();\n    return function () {\n      clearInterval(countDown);\n    };\n  }, []);\n\n  var onEnableOtpRequest = function onEnableOtpRequest() {\n    var otpDate = new Date();\n    otpDate.setTime(new Date().getTime() + 2 * 60 * 1000);\n    var otpTime = otpDate.getTime();\n    countDown = setInterval(function () {\n      var currentTime = new Date().getTime();\n      var totalTime = otpTime - currentTime;\n      var minutes = Math.floor(totalTime % (1000 * 60 * 60) / (1000 * 60));\n      var seconds = Math.floor(totalTime % (1000 * 60) / 1000);\n      var minutesNew = seconds > 10 ? minutes : '0' + minutes;\n      var secondsNew = seconds > 10 ? seconds : '0' + seconds;\n      setRequestOtpTitle(\"Request a New OTP in \" + minutesNew + \" :  \" + secondsNew);\n\n      if (minutes < 1 && seconds < 1) {\n        setRequestOtpTitle(\"Request a New OTP \");\n        setCanRequestOtp(true);\n        clearInterval(countDown);\n      }\n    }, 1000);\n  };\n\n  var onTapVerify = function onTapVerify() {\n    onVerify(otp, user);\n  };\n\n  var onTapRequestNewOTP = function onTapRequestNewOTP() {\n    setCanRequestOtp(false);\n    onOTPRequest(user);\n  };\n\n  if (!vertified) {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.body,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: require(\"../images/verify_otp.png\"),\n        style: {\n          height: 120,\n          width: 120,\n          marginTop: 200\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 22,\n          fontWeight: '500',\n          margin: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }\n      }, \"Verification\"), React.createElement(Text, {\n        style: {\n          fontSize: 16,\n          color: '#716F6F',\n          marginBottom: 20,\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }\n      }, \"Enter your OTP sent to your number\"), React.createElement(TextField, {\n        isOTP: true,\n        placeholder: \"OTP\",\n        onTextChange: function onTextChange() {},\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }\n      }), React.createElement(ButtonWithTitle, {\n        title: 'Verify OTP',\n        onTap: onTapVerify,\n        width: 340,\n        height: 50,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }\n      }), React.createElement(ButtonWithTitle, {\n        disable: canRequestOtp,\n        title: requestOtpTitle,\n        isNoBg: true,\n        onTap: onTapRequestNewOTP,\n        width: 320,\n        height: 50,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }\n      })));\n    } else {\n    return React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.navigation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 20,\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 20\n      }\n    }, isSignUp ? 'Sign Up' : 'Sign In')), React.createElement(View, {\n      style: styles.body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }, React.createElement(TextField, {\n      placeholder: \"Email\",\n      onTextChange: setEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }), isSignUp && React.createElement(TextField, {\n      placeholder: \"Phone\",\n      onTextChange: setPhone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 37\n      }\n    }), React.createElement(TextField, {\n      placeholder: \"Password\",\n      onTextChange: setPassword,\n      isSecure: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    })), React.createElement(View, {\n      style: styles.footer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, React.createElement(ButtonWithTitle, {\n      onTap: onTapAuthenticate,\n      width: 340,\n      height: 50,\n      title: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }\n    }), React.createElement(ButtonWithTitle, {\n      onTap: function onTap() {\n        return onTapOption();\n      },\n      width: 340,\n      height: 50,\n      title: !isSignUp ? 'No Account ? Signup Here' : 'Have an Account ? Login Here',\n      isNoBg: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }\n    }), React.createElement(View, {\n      style: {\n        padding: 10,\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: {\n        borderBottomWidth: 1,\n        width: 100,\n        borderColor: 'orange'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 25\n      }\n    }), React.createElement(Text, {\n      style: {\n        padding: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 25\n      }\n    }, \"or\"), React.createElement(Text, {\n      style: {\n        borderBottomWidth: 1,\n        width: 100,\n        borderColor: 'orange'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 25\n      }\n    })), React.createElement(View, {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        width: Dimensions.get('screen').width - 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }\n    }, React.createElement(View, {\n      style: {\n        borderWidth: 1,\n        height: 40,\n        alignItems: 'center',\n        width: 150,\n        borderRadius: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: {\n        lineHeight: 40\n      },\n      onPress: function onPress() {\n        return signInWithGoogleAsync().then(function (res) {\n          if (res != null && res.isNavigate) {\n            navigate('AccountPage');\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 29\n      }\n    }, \"GOOGLE\")), React.createElement(View, {\n      style: {\n        borderWidth: 1,\n        height: 40,\n        alignItems: 'center',\n        width: 150,\n        borderRadius: 10,\n        backgroundColor: 'blue'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: {\n        lineHeight: 40,\n        color: 'white'\n      },\n      onPress: logIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 29\n      }\n    }, \"FACEBOOK\")))));\n  }\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  navigation: {\n    flex: 1,\n    alignItems: 'center',\n    marginTop: 50\n  },\n  body: {\n    flex: 10,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  footer: {\n    flex: 9,\n    alignContent: 'center',\n    alignItems: 'center'\n  }\n});\n\nvar mapToStateProps = function mapToStateProps(state) {\n  return {\n    userReducer: state.userReducer,\n    shoppingReducer: state.shoppingReducer\n  };\n};\n\nvar LoginScreen = connect(mapToStateProps, {\n  onUserLogin: onUserLogin,\n  onUserSignUp: onUserSignUp,\n  onVerify: onVerify,\n  onOTPRequest: onOTPRequest,\n  onUserLoginGG: onUserLoginGG\n})(_LoginScreen);\nexport { LoginScreen };","map":{"version":3,"sources":["D:/NHOM_5_FOOD_ORDERING_17DTHD1/NHOM_5_FOOD_ORDERING_17DTHD1/RN-AppFood/src/screens/LoginScreen.tsx"],"names":["React","useState","useEffect","onUserLogin","onUserSignUp","onOTPRequest","onVerify","onUserLoginGG","TextField","connect","ButtonWithTitle","useNavigation","Google","Facebook","_LoginScreen","userReducer","Account","navigate","isSignUp","setIsSignUp","vertified","setVertified","isLoginGG","setIsLoginGG","user","userGG","signInWithGoogleAsync","logInAsync","androidClientId","scopes","result","type","token","accessToken","isNavigate","cancelled","error","logIn","initializeAsync","appId","logInWithReadPermissionsAsync","permissions","res","fetch","response","Alert","json","name","alert","message","email","setEmail","phone","setPhone","password","setPassword","title","setTitle","otp","setOtp","requestOtpTitle","setRequestOtpTitle","canRequestOtp","setCanRequestOtp","onTapOption","onTapAuthenticate","countDown","undefined","onEnableOtpRequest","clearInterval","otpDate","Date","setTime","getTime","otpTime","setInterval","currentTime","totalTime","minutes","Math","floor","seconds","minutesNew","secondsNew","onTapVerify","onTapRequestNewOTP","styles","container","body","require","height","width","marginTop","fontSize","fontWeight","margin","color","marginBottom","padding","navigation","footer","display","flexDirection","alignItems","borderBottomWidth","borderColor","justifyContent","Dimensions","get","borderWidth","borderRadius","lineHeight","then","backgroundColor","StyleSheet","create","flex","alignContent","mapToStateProps","state","shoppingReducer","LoginScreen"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { View, StyleSheet, Dimensions, Image, Text, Button, Alert } from 'react-native'\r\nimport { FoodModel, ApplicationState, ShoppingState, UserState, onUserLogin, onUserSignUp, onOTPRequest, onVerify,onUserLoginGG } from '../redux'\r\nimport { TextField } from '../component'\r\nimport { connect } from 'react-redux'\r\nimport { ButtonWithTitle } from '../component/ButtonWithTitle'\r\nimport { useNavigation, checkExistence } from '../utils'\r\nimport * as Google from 'expo-google-app-auth'\r\nimport * as Account from '../utils/LoginHelper'\r\nimport * as Facebook from 'expo-facebook';\r\nimport {Ionicons} from '@expo/vector-icons'\r\n\r\ninterface LoginProps {\r\n    onUserLogin: Function,\r\n    onUserSignUp: Function,\r\n    userReducer: UserState,\r\n    onOTPRequest: Function, onVerify: Function,\r\n    Account: {},\r\n    onUserLoginGG: Function,\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst _LoginScreen: React.FC<LoginProps> = ({ onUserLogin, onUserSignUp, userReducer, Account, onUserLoginGG }) => {\r\n\r\n    const { navigate} = useNavigation()\r\n    const [isSignUp, setIsSignUp] = useState(false)\r\n    const [vertified, setVertified] = useState(true)\r\n    const [isLoginGG, setIsLoginGG] = useState(false)\r\n  \r\n    const {user, userGG} = userReducer\r\n    //google\r\n    async function signInWithGoogleAsync() {\r\n        try {\r\n            const result = await Google.logInAsync({\r\n                androidClientId: '237033973781-habtir4dmjr82b3teqb9l44743n5237s.apps.googleusercontent.com',\r\n                scopes: ['profile', 'email'],\r\n            });\r\n\r\n            if (result.type === 'success') {\r\n                onUserLoginGG(result)\r\n                \r\n                setIsLoginGG(true)\r\n                return {\r\n                    token : result.accessToken,\r\n                    isNavigate : true\r\n                };\r\n\r\n            } else {\r\n                return { cancelled: true };\r\n            }\r\n        } catch (e) {\r\n            return { error: e };\r\n        }\r\n    }\r\n\r\n    //facebook\r\n    async function logIn() {\r\n        try {\r\n            await Facebook.initializeAsync({\r\n                appId: '787040031882663',\r\n            });\r\n            const res = await Facebook.logInWithReadPermissionsAsync({ permissions: ['public_profile'] });\r\n            if (res.type === 'success') {\r\n                // Get the user's name using Facebook's Graph API\r\n                const response = await fetch(`https://graph.facebook.com/me?access_token=${res.token}`);\r\n                Alert.alert('Logged in!', `Hi ${(await response.json()).name}!`);\r\n\r\n            } else {\r\n                // type === 'cancel'\r\n            }\r\n        } catch ({ message }) {\r\n            alert(`Facebook Login Error: ${message}`);\r\n        }\r\n    }\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [title, setTitle] = useState('Login')\r\n \r\n\r\n    const [otp, setOtp] = useState('')\r\n\r\n    const [requestOtpTitle, setRequestOtpTitle] = useState('Request a new OTP in')\r\n    const [canRequestOtp, setCanRequestOtp] = useState(true)\r\n\r\n\r\n\r\n\r\n    const onTapOption = () => {\r\n        setIsSignUp(!isSignUp)\r\n        setTitle(!isSignUp ? 'SignUp' : 'SignIn')\r\n    }\r\n\r\n    const onTapAuthenticate = () => {\r\n        if (isSignUp) {\r\n            onUserSignUp(email, password, phone)\r\n        } else {\r\n            onUserLogin(email, password)\r\n        }\r\n    }\r\n\r\n    let countDown: number\r\n\r\n    useEffect(() => {\r\n\r\n        if (user.vertified !== undefined) {\r\n            if (user.vertified === true) {\r\n                navigate('CartPage')\r\n            } else {\r\n                setVertified(user.vertified)\r\n            }\r\n        }\r\n        \r\n        onEnableOtpRequest()\r\n\r\n        return () => {\r\n            clearInterval(countDown)\r\n        }\r\n\r\n        \r\n    }, [])\r\n\r\n\r\n\r\n\r\n    const onEnableOtpRequest = () => {\r\n        const otpDate = new Date()  // lấy ngày hiện tại\r\n\r\n        otpDate.setTime(new Date().getTime() + (2 * 60 * 1000))  // lấy thời gian chờ là 2 phút\r\n\r\n        const otpTime = otpDate.getTime() // thời gian otp gửi đến\r\n\r\n        countDown = setInterval(function () {  // toognr thời gian đém ngược \r\n\r\n            const currentTime = new Date().getTime() // thời điểm hiện tại\r\n\r\n            const totalTime = otpTime - currentTime // tổng thời gian = thời gian gửi otp - thời điểm hiện tại\r\n\r\n            let minutes = Math.floor((totalTime % (1000 * 60 * 60)) / (1000 * 60)) // quy đổi ra phút\r\n\r\n            let seconds = Math.floor((totalTime % (1000 * 60)) / 1000)  // quy đổi thời gian ra giây\r\n\r\n            let minutesNew = seconds > 10 ? minutes : '0' + minutes\r\n\r\n            let secondsNew = seconds > 10 ? seconds : '0' + seconds\r\n\r\n            setRequestOtpTitle(`Request a New OTP in ${minutesNew} :  ${secondsNew}`)\r\n\r\n            if (minutes < 1 && seconds < 1) {  // nếu thời gian hết mà chưa nhập mã otp\r\n                setRequestOtpTitle(`Request a New OTP `) // chỉnh lại title\r\n                setCanRequestOtp(true) // có thể gửi lại\r\n                clearInterval(countDown) // xóa countdown vừa nãy\r\n            }\r\n\r\n\r\n        }, 1000)\r\n\r\n\r\n    }\r\n\r\n\r\n    const onTapVerify = () => {\r\n        onVerify(otp, user)\r\n    }\r\n\r\n    const onTapRequestNewOTP = () => {\r\n        setCanRequestOtp(false)\r\n        onOTPRequest(user)\r\n\r\n    }\r\n\r\n    if (!vertified)  // account chưa được xác nhận\r\n    {\r\n        return (\r\n            <View style={styles.container}>\r\n             \r\n                <View style={styles.body}>\r\n                    <Image source={(require('../images/verify_otp.png'))} style={{ height: 120, width: 120, marginTop: 200 }} />\r\n                    <Text style={{ fontSize: 22, fontWeight: '500', margin: 10 }}>Verification</Text>\r\n                    <Text style={{ fontSize: 16, color: '#716F6F', marginBottom: 20, padding: 10 }}>Enter your OTP sent to your number</Text>\r\n                    <TextField\r\n                        isOTP={true}\r\n                        placeholder='OTP'\r\n                        onTextChange={() => { }}\r\n\r\n                    />\r\n\r\n                    <ButtonWithTitle title={'Verify OTP'} onTap={onTapVerify} width={340} height={50} />\r\n\r\n                    <ButtonWithTitle disable={canRequestOtp} title={requestOtpTitle} isNoBg={true} onTap={onTapRequestNewOTP} width={320} height={50} />\r\n                </View>\r\n\r\n            </View>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={styles.navigation}>\r\n                   <Text style={{fontSize:20, fontWeight:'bold'}}>{isSignUp ? 'Sign Up' : 'Sign In'}</Text>\r\n                </View>\r\n                <View style={styles.body}>\r\n                    {/* <Image style={{ width: 200, height: 200, alignSelf: 'center' }} source={(require('../images/account_icon.png'))} /> */}\r\n                    <TextField placeholder='Email' onTextChange={setEmail} />\r\n                    {\r\n                        isSignUp && <TextField placeholder='Phone' onTextChange={setPhone} />\r\n                    }\r\n\r\n                    <TextField placeholder='Password' onTextChange={setPassword} isSecure={true} />\r\n\r\n                </View>\r\n                <View style={styles.footer}>\r\n                    <ButtonWithTitle onTap={onTapAuthenticate} width={340} height={50} title={title} />\r\n\r\n                    <ButtonWithTitle onTap={() => onTapOption()} width={340} height={50} title={!isSignUp ? 'No Account ? Signup Here' : 'Have an Account ? Login Here'} isNoBg={true} />\r\n                    <View style={{ padding: 10 , display:'flex', flexDirection:'row', alignItems:'center'}}>\r\n                        <Text style={{borderBottomWidth:1, width:100, borderColor:'orange'}}></Text>\r\n                        <Text style={{padding:5}}>or</Text>\r\n                        <Text style={{borderBottomWidth:1, width:100,borderColor:'orange'}}></Text>\r\n                    </View>\r\n                    <View style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', width: Dimensions.get('screen').width - 50 }}>\r\n                        <View style={{ borderWidth: 1, height: 40, alignItems: 'center', width: 150, borderRadius: 10 }}>\r\n                            <Text style={{ lineHeight: 40 }} onPress={() => signInWithGoogleAsync().then(res => {\r\n                                if(res?.isNavigate) {\r\n                                    navigate('AccountPage')\r\n                                }\r\n                            })}>GOOGLE</Text>\r\n                        </View>\r\n                        <View style={{ borderWidth: 1, height: 40, alignItems: 'center', width: 150, borderRadius: 10, backgroundColor: 'blue' }}>\r\n                            <Text style={{ lineHeight: 40, color: 'white' }} onPress={logIn}>FACEBOOK</Text>\r\n                        </View>\r\n                    </View>\r\n\r\n\r\n                </View>\r\n\r\n            </View>\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff'\r\n    },\r\n    navigation : {\r\n        flex:1,\r\n        alignItems:'center',marginTop:50\r\n    },\r\n    body: {\r\n        flex: 10,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n\r\n    },\r\n    footer: {\r\n        flex: 9,\r\n        alignContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n})\r\n\r\nconst mapToStateProps = (state: ApplicationState) => ({\r\n    userReducer: state.userReducer,\r\n    shoppingReducer: state.shoppingReducer\r\n})\r\n\r\nconst LoginScreen = connect(mapToStateProps, { onUserLogin, onUserSignUp, onVerify, onOTPRequest, onUserLoginGG })(_LoginScreen)\r\n\r\n\r\n\r\nexport { LoginScreen }"]},"metadata":{},"sourceType":"module"}