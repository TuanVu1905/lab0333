{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\NHOM_5_FOOD_ORDERING_17DTHD1\\\\NHOM_5_FOOD_ORDERING_17DTHD1\\\\RN-AppFood\\\\src\\\\screens\\\\SearchScreen.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { FlatList } from 'react-native-gesture-handler';\nimport { addProduct, removeProduct } from \"../redux\";\nimport { ButtonWithIcon, SearchBar } from \"../component\";\nimport { useNavigation } from \"../utils\";\nimport { connect } from 'react-redux';\nimport { FoodCardSearch } from \"../component/FoodCardSearch\";\n\nvar _SearchScreen = function _SearchScreen(props) {\n  var _useNavigation = useNavigation(),\n      navigate = _useNavigation.navigate;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEditing = _useState2[0],\n      setisEditing = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      keyword = _useState4[0],\n      setKeyword = _useState4[1];\n\n  var availableFoods = props.shoppingReducer.availableFoods;\n  var cart = props.userReducer.cart;\n\n  var onTapFood = function onTapFood(item, eventName) {\n    if (eventName === 'go_detail') {\n      navigate('FoodDetailPage', {\n        food: item\n      });\n    }\n  };\n\n  useEffect(function () {});\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n      height: 40,\n      alignItems: 'center',\n      marginLeft: 4\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, React.createElement(ButtonWithIcon, {\n    onTap: function onTap() {\n      return navigate('HomePage');\n    },\n    width: 40,\n    height: 50,\n    icon: require(\"../images/back_arrow.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }), React.createElement(SearchBar, {\n    didTouch: function didTouch() {\n      return setisEditing(true);\n    },\n    onTextChange: setKeyword,\n    onEndEditing: function onEndEditing() {\n      return setisEditing(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }))), React.createElement(View, {\n    style: styles.body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    showsVerticalScrollIndicator: false,\n    data: isEditing ? availableFoods.filter(function (item) {\n      return item.name.includes(keyword);\n    }) : availableFoods,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(FoodCardSearch, {\n        onUpdateCart: props.addProduct,\n        onRemove: props.removeProduct,\n        item: item,\n        onTap: onTapFood,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 47\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return \"\" + item._id;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  navigation: {\n    flex: 1,\n    marginTop: 40,\n    marginBottom: 10\n  },\n  body: {\n    flex: 10,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    shoppingReducer: state.shoppingReducer,\n    userReducer: state.userReducer\n  };\n};\n\nvar SearchScreen = connect(mapStateToProps, {\n  addProduct: addProduct,\n  removeProduct: removeProduct\n})(_SearchScreen);\nexport { SearchScreen };","map":{"version":3,"sources":["D:/NHOM_5_FOOD_ORDERING_17DTHD1/NHOM_5_FOOD_ORDERING_17DTHD1/RN-AppFood/src/screens/SearchScreen.tsx"],"names":["React","useEffect","useState","FlatList","addProduct","removeProduct","ButtonWithIcon","SearchBar","useNavigation","connect","FoodCardSearch","_SearchScreen","props","navigate","isEditing","setisEditing","keyword","setKeyword","availableFoods","shoppingReducer","cart","userReducer","onTapFood","item","eventName","food","styles","container","navigation","display","flexDirection","justifyContent","height","alignItems","marginLeft","require","body","filter","name","includes","_id","StyleSheet","create","flex","backgroundColor","marginTop","marginBottom","mapStateToProps","state","SearchScreen"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,SAAsCC,QAAtC,QAAsD,8BAAtD;AACA,SAA8EC,UAA9E,EAA0FC,aAA1F;AACA,SAASC,cAAT,EAAoDC,SAApD;AAEA,SAASC,aAAT;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT;;AAaA,IAAMC,aAAoC,GAAG,SAAvCA,aAAuC,CAACC,KAAD,EAAW;AAAA,uBAG9BJ,aAAa,EAHiB;AAAA,MAG3CK,QAH2C,kBAG3CA,QAH2C;;AAAA,kBAMlBX,QAAQ,CAAC,KAAD,CANU;AAAA;AAAA,MAM7CY,SAN6C;AAAA,MAMlCC,YANkC;;AAAA,mBAOtBb,QAAQ,CAAC,EAAD,CAPc;AAAA;AAAA,MAO7Cc,OAP6C;AAAA,MAOpCC,UAPoC;;AAAA,MAS5CC,cAT4C,GASzBN,KAAK,CAACO,eATmB,CAS5CD,cAT4C;AAAA,MAY7CE,IAZ6C,GAYrCR,KAAK,CAACS,WAZ+B,CAY7CD,IAZ6C;;AAcpD,MAAME,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAkBC,SAAlB,EAA0C;AAExD,QAAGA,SAAS,KAAK,WAAjB,EAA8B;AAC1BX,MAAAA,QAAQ,CAAC,gBAAD,EAAmB;AAACY,QAAAA,IAAI,EAAEF;AAAP,OAAnB,CAAR;AACH;AACJ,GALD;;AAOAtB,EAAAA,SAAS,CAAC,YAAM,CAEf,CAFQ,CAAT;AAKA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEyB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,aAAa,EAAE,KAAlC;AAAyCC,MAAAA,cAAc,EAAE,cAAzD;AAAyEC,MAAAA,MAAM,EAAE,EAAjF;AAAqFC,MAAAA,UAAU,EAAE,QAAjG;AAA2GC,MAAAA,UAAU,EAAE;AAAvH,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAE;AAAA,aAAMrB,QAAQ,CAAC,UAAD,CAAd;AAAA,KAAvB;AAAmD,IAAA,KAAK,EAAE,EAA1D;AAA8D,IAAA,MAAM,EAAE,EAAtE;AAA0E,IAAA,IAAI,EAAEsB,OAAO,4BAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,SAAD;AACI,IAAA,QAAQ,EAAE;AAAA,aAAMpB,YAAY,CAAC,IAAD,CAAlB;AAAA,KADd;AAEI,IAAA,YAAY,EAAEE,UAFlB;AAGI,IAAA,YAAY,EAAE;AAAA,aAAMF,YAAY,CAAC,KAAD,CAAlB;AAAA,KAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ,EAWI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEW,MAAM,CAACU,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEY,oBAAC,QAAD;AACJ,IAAA,4BAA4B,EAAE,KAD1B;AAEJ,IAAA,IAAI,EAAEtB,SAAS,GAAGI,cAAc,CAACmB,MAAf,CAAsB,UAAAd,IAAI,EAAI;AAC5C,aAAOA,IAAI,CAACe,IAAL,CAAUC,QAAV,CAAmBvB,OAAnB,CAAP;AACH,KAFiB,CAAH,GAEVE,cAJD;AAKJ,IAAA,UAAU,EAAE;AAAA,UAAGK,IAAH,QAAGA,IAAH;AAAA,aAAc,oBAAC,cAAD;AAAgB,QAAA,YAAY,EAAEX,KAAK,CAACR,UAApC;AAAiD,QAAA,QAAQ,EAAEQ,KAAK,CAACP,aAAjE;AAAiF,QAAA,IAAI,EAAEkB,IAAvF;AAA6F,QAAA,KAAK,EAAED,SAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AAAA,KALR;AAMJ,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,kBAAaA,IAAI,CAACiB,GAAlB;AAAA,KANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFZ,CAXJ,CADJ;AA8BH,CAxDD;;AA0DA,IAAMd,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;AAE7Bf,EAAAA,SAAS,EAAE;AACPgB,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE;AAFV,GAFkB;AAM7BhB,EAAAA,UAAU,EAAE;AACRe,IAAAA,IAAI,EAAE,CADE;AAERE,IAAAA,SAAS,EAAE,EAFH;AAGRC,IAAAA,YAAY,EAAE;AAHN,GANiB;AAW7BV,EAAAA,IAAI,EAAE;AACFO,IAAAA,IAAI,EAAE,EADJ;AAEFZ,IAAAA,cAAc,EAAE,QAFd;AAGFE,IAAAA,UAAU,EAAE;AAHV;AAXuB,CAAlB,CAAf;;AAoBA,IAAMc,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAA8B;AAClD7B,IAAAA,eAAe,EAAE6B,KAAK,CAAC7B,eAD2B;AAElDE,IAAAA,WAAW,EAAG2B,KAAK,CAAC3B;AAF8B,GAA9B;AAAA,CAAxB;;AAKA,IAAM4B,YAAY,GAAGxC,OAAO,CAACsC,eAAD,EAAkB;AAAC3C,EAAAA,UAAU,EAAVA,UAAD;AAAYC,EAAAA,aAAa,EAAbA;AAAZ,CAAlB,CAAP,CAAqDM,aAArD,CAArB;AAEA,SAASsC,YAAT","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { View, Text, StyleSheet, Dimensions, Image, ImageSourcePropType, ImageBackground } from 'react-native'\r\nimport { TextInput, TouchableOpacity, FlatList } from 'react-native-gesture-handler'\r\nimport { FoodModel, ApplicationState, ShoppingState , onUpdateCart, UserState,addProduct, removeProduct} from '../redux'\r\nimport { ButtonWithIcon, ButtonAddRemove, FoodCard, SearchBar } from '../component'\r\n\r\nimport { useNavigation, checkExistence } from '../utils'\r\nimport { connect } from 'react-redux'\r\nimport { FoodCardSearch } from '../component/FoodCardSearch'\r\n\r\n\r\n\r\n\r\ninterface SearchProps {\r\n    shoppingReducer: ShoppingState,\r\n    userReducer: UserState,\r\n    onUpdateCart : Function,\r\n    addProduct : Function,\r\n    removeProduct :Function\r\n\r\n}\r\nconst _SearchScreen: React.FC<SearchProps> = (props) => {\r\n\r\n\r\n     const { navigate } = useNavigation()\r\n\r\n\r\n    const [isEditing, setisEditing] = useState(false)\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    const { availableFoods } = props.shoppingReducer\r\n\r\n\r\n    const {cart} = props.userReducer\r\n\r\n    const onTapFood = (item : FoodModel,eventName? : string) => {\r\n        // navigate('FoodDetailPage', {food: item})\r\n        if(eventName === 'go_detail') {\r\n            navigate('FoodDetailPage', {food: item})\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n   \r\n    })\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.navigation}>\r\n                <View style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-around', height: 40, alignItems: 'center', marginLeft: 4 }}>\r\n                    <ButtonWithIcon onTap={() => navigate('HomePage')} width={40} height={50} icon={require('../images/back_arrow.png')} />\r\n                    <SearchBar\r\n                        didTouch={() => setisEditing(true)}\r\n                        onTextChange={setKeyword}\r\n                        onEndEditing={() => setisEditing(false)}\r\n                    />\r\n                </View>\r\n            </View>\r\n            <View style={styles.body}>\r\n            \r\n                        <FlatList\r\n                    showsVerticalScrollIndicator={false}\r\n                    data={isEditing ? availableFoods.filter(item => {\r\n                        return item.name.includes(keyword)\r\n                    }) : availableFoods}\r\n                    renderItem={({ item }) => <FoodCardSearch onUpdateCart={props.addProduct}  onRemove={props.removeProduct}  item={item} onTap={onTapFood} />}\r\n                    keyExtractor={(item) => `${item._id}`}\r\n\r\n                />\r\n                   \r\n                \r\n            </View>\r\n\r\n        </View>\r\n    )\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff'\r\n    },\r\n    navigation: {\r\n        flex: 1,\r\n        marginTop: 40,\r\n        marginBottom: 10\r\n    },\r\n    body: {\r\n        flex: 10,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n})\r\n\r\n\r\n\r\nconst mapStateToProps = (state: ApplicationState) => ({\r\n    shoppingReducer: state.shoppingReducer,\r\n    userReducer : state.userReducer\r\n})\r\n\r\nconst SearchScreen = connect(mapStateToProps, {addProduct,removeProduct})(_SearchScreen)\r\n\r\nexport { SearchScreen }"]},"metadata":{},"sourceType":"module"}