{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport { BASE_URL } from \"../../utils\";\nexport var onUpdateLocation = function onUpdateLocation(location) {\n  return function _callee(dispatch) {\n    var locationString;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              locationString = JSON.stringify(location);\n              dispatch({\n                type: 'ON_UPDATE_LOCATION',\n                payload: location\n              });\n            } catch (error) {\n              dispatch({\n                type: 'ON_USER_ERROR',\n                payload: error\n              });\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var onUpdateCart = function onUpdateCart(item) {\n  return function _callee2(dispatch) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            dispatch({\n              type: 'ON_UPDATE_CART',\n              payload: item\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var addProduct = function addProduct(product) {\n  var quantity = product.unit || 0;\n  product.unit = quantity + 1;\n  console.log('check ở reducer', quantity);\n  return function (dispatch) {\n    dispatch({\n      type: 'ADD_PRODUCT',\n      payload: product\n    });\n  };\n};\nexport var removeProduct = function removeProduct(product) {\n  var quantity1 = product.unit || 0;\n  product.unit = quantity1 - 1;\n  return function (dispatch) {\n    dispatch({\n      type: 'REMOVE_PRODUCT',\n      payload: product\n    });\n  };\n};\nexport var onUserLogin = function onUserLogin(email, password) {\n  return function _callee3(dispatch) {\n    var response;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(axios.post(BASE_URL + \"user/login\", {\n              email: email,\n              password: password\n            }));\n\n          case 3:\n            response = _context3.sent;\n\n            if (!response) {\n                dispatch({\n                  type: 'ON_USER_ERROR',\n                  payload: 'User Login error'\n                });\n              } else {\n                dispatch({\n                  type: 'ON_USER_LOGIN',\n                  payload: response.data\n                });\n              }\n\n            _context3.next = 10;\n            break;\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](0);\n            dispatch({\n              type: 'ON_USER_ERROR',\n              payload: _context3.t0\n            });\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n};\nexport var onUserSignUp = function onUserSignUp(email, phone, password) {\n  return function _callee4(dispatch) {\n    var response;\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(axios.post(BASE_URL + \"user/create-account\", {\n              email: email,\n              password: password,\n              phone: phone\n            }));\n\n          case 3:\n            response = _context4.sent;\n\n            if (!response) {\n                dispatch({\n                  type: 'ON_USER_ERROR',\n                  payload: 'Availability error'\n                });\n              } else {\n                dispatch({\n                  type: 'ON_USER_LOGIN',\n                  payload: response.data\n                });\n              }\n\n            _context4.next = 10;\n            break;\n\n          case 7:\n            _context4.prev = 7;\n            _context4.t0 = _context4[\"catch\"](0);\n            dispatch({\n              type: 'ON_USER_ERROR',\n              payload: _context4.t0\n            });\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n};\nexport var onVerify = function onVerify(otp, user) {\n  return function _callee5(dispatch) {\n    var response;\n    return _regeneratorRuntime.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            axios.defaults.headers.common['Authorization'] = \"Bearer \" + user.token;\n            _context5.next = 4;\n            return _regeneratorRuntime.awrap(axios.patch(BASE_URL + \"user/verify\", {\n              otp: otp\n            }));\n\n          case 4:\n            response = _context5.sent;\n\n            if (!response) {\n                dispatch({\n                  type: 'ON_USER_ERROR',\n                  payload: 'User Verification error'\n                });\n              } else {\n                dispatch({\n                  type: 'ON_USER_LOGIN',\n                  payload: response.data\n                });\n              }\n\n            _context5.next = 11;\n            break;\n\n          case 8:\n            _context5.prev = 8;\n            _context5.t0 = _context5[\"catch\"](0);\n            dispatch({\n              type: 'ON_USER_ERROR',\n              payload: _context5.t0\n            });\n\n          case 11:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n};\nexport var onOTPRequest = function onOTPRequest(user) {\n  return function _callee6(dispatch) {\n    var response;\n    return _regeneratorRuntime.async(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            axios.defaults.headers.common['Authorization'] = \"Bearer \" + user.token;\n            _context6.next = 4;\n            return _regeneratorRuntime.awrap(axios.patch(BASE_URL + \"user/otp\"));\n\n          case 4:\n            response = _context6.sent;\n\n            if (!response) {\n                dispatch({\n                  type: 'ON_USER_ERROR',\n                  payload: 'User Verification error'\n                });\n              } else {\n                dispatch({\n                  type: 'ON_USER_LOGIN',\n                  payload: response.data\n                });\n              }\n\n            _context6.next = 11;\n            break;\n\n          case 8:\n            _context6.prev = 8;\n            _context6.t0 = _context6[\"catch\"](0);\n            dispatch({\n              type: 'ON_USER_ERROR',\n              payload: _context6.t0\n            });\n\n          case 11:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n};\nexport var onUserLoginGG = function onUserLoginGG(user) {\n  console.log('Người dungff', user);\n  return function _callee7(dispatch) {\n    return _regeneratorRuntime.async(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            dispatch({\n              type: 'ON_USER_LOGIN_GG',\n              payload: user\n            });\n\n          case 1:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["D:/NHOM_5_FOOD_ORDERING_17DTHD1/NHOM_5_FOOD_ORDERING_17DTHD1/RN-AppFood/src/redux/actions/userActions.ts"],"names":["axios","BASE_URL","onUpdateLocation","location","dispatch","locationString","JSON","stringify","type","payload","error","onUpdateCart","item","addProduct","product","quantity","unit","console","log","removeProduct","quantity1","onUserLogin","email","password","post","response","data","onUserSignUp","phone","onVerify","otp","user","defaults","headers","common","token","patch","onOTPRequest","onUserLoginGG"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { Dispatch } from 'react'\r\nimport { BASE_URL } from '../../utils'\r\nimport { Address } from 'expo-location'\r\nimport AsnycStorage from '@react-native-async-storage/async-storage'\r\nimport { FoodModel, UserModel } from '../models'\r\n\r\n\r\n\r\n//action trả về vị trí hiện tại người dùng\r\nexport interface UpdateLocationAction {\r\n    readonly type: 'ON_UPDATE_LOCATION',\r\n    payload: Address\r\n}\r\n\r\n//action trả về lỗi \r\nexport interface UserErrorAction {\r\n    readonly type: 'ON_USER_ERROR',\r\n    payload: any\r\n}\r\n\r\n// action update cart\r\nexport interface UpdateCartAction {\r\n    readonly type: 'ON_UPDATE_CART',\r\n    payload: FoodModel\r\n}\r\n\r\n// action update cart\r\nexport interface AddPRoductAction {\r\n    readonly type: 'ADD_PRODUCT',\r\n    payload: FoodModel\r\n}\r\n\r\nexport interface RemovePRoductAction {\r\n    readonly type: 'REMOVE_PRODUCT',\r\n    payload: FoodModel\r\n}\r\n\r\nexport interface UserLoginAction {\r\n    readonly type: 'ON_USER_LOGIN'\r\n    payload: UserModel\r\n}\r\n\r\n\r\nexport interface UserLoginActionGooGle {\r\n    readonly type: 'ON_USER_LOGIN_GG'\r\n    payload: UserModel\r\n}\r\n\r\nexport type UserAction = UpdateLocationAction | UserErrorAction | UpdateCartAction | AddPRoductAction | RemovePRoductAction | UserLoginAction | UserLoginActionGooGle\r\n\r\n// user action trigger from component\r\nexport const onUpdateLocation = (location: Address) => {\r\n    return async (dispatch: Dispatch<UserAction>) => {\r\n        try {\r\n\r\n            const locationString = JSON.stringify(location)\r\n\r\n            // lưu vị trí vào asnyc storage\r\n            dispatch({\r\n                type: 'ON_UPDATE_LOCATION',\r\n                payload: location\r\n            })\r\n\r\n        } catch (error) {\r\n            dispatch({\r\n                type: 'ON_USER_ERROR',\r\n                payload: error\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const onUpdateCart = (item: FoodModel) => {\r\n    return async (dispatch: Dispatch<UserAction>) => {\r\n        dispatch({\r\n            type: 'ON_UPDATE_CART',\r\n            payload: item\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const addProduct = (product: FoodModel) => {\r\n    //console.log('helloooo',product.unit)\r\n    const quantity = product.unit || 0\r\n    product.unit = quantity + 1;\r\n    console.log('check ở reducer',quantity)\r\n    return (dispatch: Dispatch<UserAction>) => {\r\n        dispatch({\r\n            type: 'ADD_PRODUCT',\r\n            payload: product\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeProduct = (product: FoodModel) => {\r\n    const quantity1 = product.unit || 0;\r\n    product.unit = quantity1 - 1;\r\n\r\n    return (dispatch: Dispatch<UserAction>) => {\r\n        dispatch({\r\n            type: 'REMOVE_PRODUCT',\r\n            payload: product\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const onUserLogin = (email: string, password: string) => {\r\n\r\n\r\n    return async (dispatch: Dispatch<UserAction>) => {\r\n        try {\r\n\r\n            // fetch data từ API\r\n            const response = await axios.post<UserModel>(`${BASE_URL}user/login` ,{\r\n                email,\r\n                password\r\n            }) \r\n\r\n            if(!response) // nếu dữ liệu ko có \r\n            {\r\n                dispatch({\r\n                    type: 'ON_USER_ERROR',   // trả về loại : ...\r\n                    payload: 'User Login error' // trả về hành động : ....\r\n                })\r\n            }else // nếu có dữ liệu\r\n            {\r\n                dispatch({                          \r\n                    type:'ON_USER_LOGIN',  // trả về loại : ...\r\n                    payload: response.data   // trả về hành động : lấy data\r\n                })\r\n            }            \r\n        } catch (error) {\r\n            dispatch({\r\n                type: 'ON_USER_ERROR',\r\n                payload: error\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const onUserSignUp = (email: string, phone: string ,password: string) => {\r\n\r\n\r\n    return async (dispatch: Dispatch<UserAction>) => {\r\n        try {\r\n\r\n            // fetch data từ API\r\n            const response = await axios.post<UserModel>(`${BASE_URL}user/create-account` ,{\r\n                email,\r\n                password,\r\n                phone\r\n            }) \r\n\r\n            if(!response) // nếu dữ liệu ko có \r\n            {\r\n                dispatch({\r\n                    type: 'ON_USER_ERROR',   // trả về loại : ...\r\n                    payload: 'Availability error' // trả về hành động : ....\r\n                })\r\n            }else // nếu có dữ liệu\r\n            {\r\n                dispatch({                          \r\n                    type:'ON_USER_LOGIN',  // trả về loại : ...\r\n                    payload: response.data   // trả về hành động : lấy data\r\n                })\r\n            }            \r\n        } catch (error) {\r\n            dispatch({\r\n                type: 'ON_USER_ERROR',\r\n                payload: error\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const onVerify = (otp : string,user : UserModel) => {\r\n\r\n\r\n    return async (dispatch: Dispatch<UserAction>) => {\r\n        try {\r\n\r\n            axios.defaults.headers.common['Authorization'] = `Bearer ${user.token}`  // lấy mã token tương ứng với mỗi user\r\n\r\n            // fetch data từ API\r\n            const response = await axios.patch<UserModel>(`${BASE_URL}user/verify` ,{\r\n                otp\r\n            }) // nhận giá trị trả về là mã otp\r\n\r\n            if(!response) // nếu dữ liệu ko có \r\n            {\r\n                dispatch({\r\n                    type: 'ON_USER_ERROR',   // trả về loại : ...\r\n                    payload: 'User Verification error' // trả về hành động : ....\r\n                })\r\n            }else // nếu có dữ liệu\r\n            {\r\n                dispatch({                          \r\n                    type:'ON_USER_LOGIN',  // trả về loại : ...\r\n                    payload: response.data   // trả về hành động : lấy data\r\n                })\r\n            }            \r\n        } catch (error) {\r\n            dispatch({\r\n                type: 'ON_USER_ERROR',\r\n                payload: error\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const onOTPRequest = (user : UserModel) => {\r\n\r\n\r\n    return async (dispatch: Dispatch<UserAction>) => {\r\n        try {\r\n\r\n            axios.defaults.headers.common['Authorization'] = `Bearer ${user.token}`  // lấy mã token tương ứng với mỗi user\r\n\r\n            // fetch data từ API\r\n            const response = await axios.patch<UserModel>(`${BASE_URL}user/otp`) // nhận giá trị trả về là mã otp\r\n\r\n            if(!response) // nếu dữ liệu ko có \r\n            {\r\n                dispatch({\r\n                    type: 'ON_USER_ERROR',   // trả về loại : ...\r\n                    payload: 'User Verification error' // trả về hành động : ....\r\n                })\r\n            }else // nếu có dữ liệu\r\n            {\r\n                dispatch({                          \r\n                    type:'ON_USER_LOGIN',  // trả về loại : ...\r\n                    payload: response.data   // trả về hành động : lấy data\r\n                })\r\n            }            \r\n        } catch (error) {\r\n            dispatch({\r\n                type: 'ON_USER_ERROR',\r\n                payload: error\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const onUserLoginGG = (user : UserModel) => {\r\n    console.log('Người dungff', user)\r\n    return async (dispatch: Dispatch<UserAction>) => {\r\n        dispatch({\r\n            type: 'ON_USER_LOGIN_GG',\r\n            payload: user\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}