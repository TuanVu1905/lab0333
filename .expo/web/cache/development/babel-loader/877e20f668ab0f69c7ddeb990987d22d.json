{"ast":null,"code":"var _jsxFileName = \"D:\\\\NHOM_5_FOOD_ORDERING_17DTHD1\\\\NHOM_5_FOOD_ORDERING_17DTHD1\\\\RN-AppFood\\\\src\\\\component\\\\ButtonWithTitle.tsx\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nvar ButtonWithTitle = function ButtonWithTitle(_ref) {\n  var onTap = _ref.onTap,\n      width = _ref.width,\n      height = _ref.height,\n      title = _ref.title,\n      _ref$isNoBg = _ref.isNoBg,\n      isNoBg = _ref$isNoBg === void 0 ? false : _ref$isNoBg,\n      _ref$disable = _ref.disable,\n      disable = _ref$disable === void 0 ? false : _ref$disable;\n\n  if (isNoBg) {\n    return React.createElement(TouchableOpacity, {\n      disabled: disable,\n      style: [styles.btn, {\n        width: width,\n        height: height,\n        backgroundColor: 'transparent'\n      }],\n      onPress: function onPress() {\n        return onTap();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: disable ? '#6F6F6F' : '#3980D9',\n        fontSize: 19\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 23\n      }\n    }, title));\n  } else {\n    return React.createElement(TouchableOpacity, {\n      style: [styles.btn, {\n        width: width,\n        height: height\n      }],\n      onPress: function onPress() {\n        return onTap();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: 'white',\n        fontSize: 19\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 23\n      }\n    }, title));\n  }\n};\n\nvar styles = StyleSheet.create({\n  btn: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 50,\n    backgroundColor: '#f14b5d',\n    marginTop: 20\n  }\n});\nexport { ButtonWithTitle };","map":{"version":3,"sources":["D:/NHOM_5_FOOD_ORDERING_17DTHD1/NHOM_5_FOOD_ORDERING_17DTHD1/RN-AppFood/src/component/ButtonWithTitle.tsx"],"names":["React","TouchableOpacity","ButtonWithTitle","onTap","width","height","title","isNoBg","disable","styles","btn","backgroundColor","color","fontSize","StyleSheet","create","justifyContent","alignItems","borderRadius","marginTop"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;;;AAEA,SAAoBC,gBAApB,QAA4C,8BAA5C;;AAWC,IAAMC,eAA2C,GAAG,SAA9CA,eAA8C,OAAgE;AAAA,MAA9DC,KAA8D,QAA9DA,KAA8D;AAAA,MAAvDC,KAAuD,QAAvDA,KAAuD;AAAA,MAAjDC,MAAiD,QAAjDA,MAAiD;AAAA,MAA1CC,KAA0C,QAA1CA,KAA0C;AAAA,yBAAnCC,MAAmC;AAAA,MAAnCA,MAAmC,4BAA1B,KAA0B;AAAA,0BAAnBC,OAAmB;AAAA,MAAnBA,OAAmB,6BAAX,KAAW;;AAGjH,MAAGD,MAAH,EAAW;AACP,WACI,oBAAC,gBAAD;AAAkB,MAAA,QAAQ,EAAEC,OAA5B;AAAqC,MAAA,KAAK,EAAE,CAACC,MAAM,CAACC,GAAR,EAAa;AAACN,QAAAA,KAAK,EAALA,KAAD;AAAOC,QAAAA,MAAM,EAANA,MAAP;AAAeM,QAAAA,eAAe,EAAC;AAA/B,OAAb,CAA5C;AAAyG,MAAA,OAAO,EAAE;AAAA,eAAMR,KAAK,EAAX;AAAA,OAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACU,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACS,QAAAA,KAAK,EAAEJ,OAAO,GAAG,SAAH,GAAe,SAA9B;AAAwCK,QAAAA,QAAQ,EAAC;AAAjD,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqEP,KAArE,CADV,CADJ;AAKH,GAND,MAMO;AACH,WACI,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAE,CAACG,MAAM,CAACC,GAAR,EAAa;AAACN,QAAAA,KAAK,EAALA,KAAD;AAAOC,QAAAA,MAAM,EAANA;AAAP,OAAb,CAAzB;AAAuD,MAAA,OAAO,EAAE;AAAA,eAAMF,KAAK,EAAX;AAAA,OAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACU,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACS,QAAAA,KAAK,EAAC,OAAP;AAAeC,QAAAA,QAAQ,EAAC;AAAxB,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2CP,KAA3C,CADV,CADJ;AAKH;AAGJ,CAlBA;;AAoBD,IAAMG,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BL,EAAAA,GAAG,EAAE;AACDM,IAAAA,cAAc,EAAC,QADd;AAEDC,IAAAA,UAAU,EAAC,QAFV;AAIDC,IAAAA,YAAY,EAAC,EAJZ;AAKDP,IAAAA,eAAe,EAAC,SALf;AAMDQ,IAAAA,SAAS,EAAC;AANT;AADwB,CAAlB,CAAf;AAWA,SAASjB,eAAT","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { View, Text, StyleSheet, Dimensions, Image, ImageSourcePropType } from 'react-native'\r\nimport { TextInput, TouchableOpacity } from 'react-native-gesture-handler'\r\n\r\n\r\ninterface ButtonTitleProps {\r\n     onTap: Function,\r\n     width: number,\r\n     height: number,\r\n     title: string,\r\n    isNoBg? : boolean,\r\n    disable? : boolean\r\n}\r\n const ButtonWithTitle: React.FC<ButtonTitleProps> = ({onTap, width,height,title, isNoBg = false, disable=false}) => {\r\n\r\n\r\n    if(isNoBg) {\r\n        return (\r\n            <TouchableOpacity disabled={disable} style={[styles.btn, {width,height, backgroundColor:'transparent'}]} onPress={() => onTap()}>\r\n                      <Text style={{color: disable ? '#6F6F6F' : '#3980D9',fontSize:19,}}>{title}</Text>\r\n            </TouchableOpacity>\r\n        )\r\n    } else {\r\n        return (\r\n            <TouchableOpacity style={[styles.btn, {width,height}]} onPress={() => onTap()}>\r\n                      <Text style={{color:'white',fontSize:19}}>{title}</Text>\r\n            </TouchableOpacity>\r\n        )\r\n    }\r\n    \r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    btn: {\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n \r\n        borderRadius:50,\r\n        backgroundColor:'#f14b5d',\r\n        marginTop:20,\r\n    }\r\n})\r\n\r\nexport { ButtonWithTitle}"]},"metadata":{},"sourceType":"module"}