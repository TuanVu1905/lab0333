{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\NHOM_5_FOOD_ORDERING_17DTHD1\\\\NHOM_5_FOOD_ORDERING_17DTHD1\\\\RN-AppFood\\\\src\\\\screens\\\\LandingScreen.tsx\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as Location from 'expo-location';\nimport { useNavigation } from \"../utils\";\nimport { connect } from 'react-redux';\nimport { onUpdateLocation } from \"../redux\";\nvar screenWidth = Dimensions.get('screen').width;\n\nvar _LandingScreen = function _LandingScreen(props) {\n  var userReducer = props.userReducer,\n      onUpdateLocation = props.onUpdateLocation;\n\n  var _useNavigation = useNavigation(),\n      navigate = _useNavigation.navigate;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      errorMsg = _useState2[0],\n      setErrorMsg = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      address = _useState4[0],\n      setAddress = _useState4[1];\n\n  var _useState5 = useState(\"Waiting for Current Location\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      displayAddress = _useState6[0],\n      setDisplayAddress = _useState6[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Location$reque, status, location, coords, latitude, longitude, addressResponse, _iterator, _step, item, currentAddress;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (status !== 'granted') {\n                setErrorMsg('Permission to access location is not granted');\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 7:\n              location = _context.sent;\n              coords = location.coords;\n\n              if (!coords) {\n                _context.next = 27;\n                break;\n              }\n\n              latitude = coords.latitude, longitude = coords.longitude;\n              _context.next = 13;\n              return _regeneratorRuntime.awrap(Location.reverseGeocodeAsync({\n                latitude: latitude,\n                longitude: longitude\n              }));\n\n            case 13:\n              addressResponse = _context.sent;\n              _iterator = _createForOfIteratorHelperLoose(addressResponse);\n\n            case 15:\n              if ((_step = _iterator()).done) {\n                _context.next = 25;\n                break;\n              }\n\n              item = _step.value;\n              setAddress(item);\n              onUpdateLocation(item);\n              currentAddress = item.name + \",\" + item.street + \", \" + item.postalCode + \", \" + item.country;\n              setDisplayAddress(currentAddress);\n\n              if (currentAddress.length > 0) {\n                setTimeout(function () {\n                  navigate('homeStack');\n                }, 2000);\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 23:\n              _context.next = 15;\n              break;\n\n            case 25:\n              _context.next = 27;\n              break;\n\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../images/delivery_icon.png\"),\n    style: styles.deliveryIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: styles.addressContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.addressTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, \"Your Delivery Address\")), React.createElement(Text, {\n    style: styles.addressText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \" \", props.userReducer.location.region)), React.createElement(View, {\n    style: styles.footer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'rgba(242,242,242,1)'\n  },\n  navigation: {\n    flex: 2\n  },\n  body: {\n    flex: 9,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  deliveryIcon: {\n    width: 120,\n    height: 120\n  },\n  addressContainer: {\n    width: screenWidth - 100,\n    borderBottomColor: 'red',\n    borderBottomWidth: 0.5,\n    padding: 5,\n    marginBottom: 10,\n    alignItems: 'center'\n  },\n  addressTitle: {\n    fontSize: 22,\n    fontWeight: '700',\n    color: '#7D7D7D'\n  },\n  addressText: {\n    fontSize: 20,\n    fontWeight: '200',\n    color: '#4F4F4F'\n  },\n  footer: {\n    flex: 1\n  }\n});\n\nvar mapToStateProps = function mapToStateProps(state) {\n  return {\n    userReducer: state.userReducer\n  };\n};\n\nvar LandingScreen = connect(mapToStateProps, {\n  onUpdateLocation: onUpdateLocation\n})(_LandingScreen);\nexport { LandingScreen };","map":{"version":3,"sources":["D:/NHOM_5_FOOD_ORDERING_17DTHD1/NHOM_5_FOOD_ORDERING_17DTHD1/RN-AppFood/src/screens/LandingScreen.tsx"],"names":["React","useState","useEffect","Location","useNavigation","connect","onUpdateLocation","screenWidth","Dimensions","get","width","_LandingScreen","props","userReducer","navigate","errorMsg","setErrorMsg","address","setAddress","displayAddress","setDisplayAddress","requestPermissionsAsync","status","getCurrentPositionAsync","location","coords","latitude","longitude","reverseGeocodeAsync","addressResponse","item","currentAddress","name","street","postalCode","country","length","setTimeout","styles","container","navigation","body","require","deliveryIcon","addressContainer","addressTitle","addressText","region","footer","StyleSheet","create","flex","backgroundColor","justifyContent","alignItems","height","borderBottomColor","borderBottomWidth","padding","marginBottom","fontSize","fontWeight","color","mapToStateProps","state","LandingScreen"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useEffect } from 'react'\r\nimport { View, Text, StyleSheet, Dimensions, ActivityIndicator, Image } from 'react-native'\r\nimport { LazyLoadComponent } from 'react-lazy-load-image-component';\r\n\r\nimport * as Location from 'expo-location' // sử dụng thư viện lấy tọa độ\r\n\r\n\r\nimport { useNavigation } from '../utils' // sử dụng chuyển màn hình\r\n\r\nimport { connect } from 'react-redux' // sử dụng connect để kết nối state và action\r\nimport { onUpdateLocation, UserState, ApplicationState } from '../redux'\r\n\r\n//1 . onUpdateLocation\r\n\r\nconst screenWidth = Dimensions.get('screen').width\r\n\r\n\r\n\r\ninterface LandingProps {\r\n    userReducer: UserState,\r\n    onUpdateLocation: Function\r\n}\r\n\r\nconst _LandingScreen: React.FC<LandingProps> = (props) => {\r\n\r\n    const { userReducer, onUpdateLocation } = props\r\n\r\n    //const {userReducer, onUpdateLocation} = props\r\n\r\n    const { navigate } = useNavigation()\r\n\r\n    const [errorMsg, setErrorMsg] = useState(\"\")\r\n    const [address, setAddress] = useState<Location.Address>()\r\n\r\n    const [displayAddress, setDisplayAddress] = useState(\"Waiting for Current Location\")\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        (async () => {\r\n\r\n            let { status } = await Location.requestPermissionsAsync();\r\n\r\n            if (status !== 'granted') {\r\n                setErrorMsg('Permission to access location is not granted')\r\n            }\r\n\r\n            let location: any = await Location.getCurrentPositionAsync({});\r\n\r\n            const { coords } = location\r\n\r\n            if (coords) {\r\n\r\n                const { latitude, longitude } = coords;\r\n\r\n                let addressResponse: any = await Location.reverseGeocodeAsync({ latitude, longitude })\r\n\r\n                for (let item of addressResponse) {\r\n                    setAddress(item)\r\n                    onUpdateLocation(item)\r\n                    let currentAddress = `${item.name},${item.street}, ${item.postalCode}, ${item.country}`\r\n                    setDisplayAddress(currentAddress)\r\n                    if (currentAddress.length > 0) {\r\n                        setTimeout(() => {\r\n                            navigate('homeStack')\r\n                        }, 2000)\r\n                    }\r\n\r\n\r\n                    return;\r\n                }\r\n\r\n\r\n            } else {\r\n                //notify user something went wrong with location\r\n            }\r\n\r\n        })();\r\n\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.navigation} />\r\n\r\n            <View style={styles.body}>\r\n             \r\n                    <Image  source={require('../images/delivery_icon.png')} style={styles.deliveryIcon} />\r\n               \r\n\r\n                <View style={styles.addressContainer}>\r\n                    <Text style={styles.addressTitle}>Your Delivery Address</Text>\r\n                </View>\r\n                <Text style={styles.addressText}> {props.userReducer.location.region}</Text>\r\n            </View>\r\n            <View style={styles.footer} />\r\n        </View>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: 'rgba(242,242,242,1)'\r\n    },\r\n    navigation: {\r\n        flex: 2,\r\n    },\r\n    body: {\r\n        flex: 9,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    deliveryIcon: {\r\n        width: 120,\r\n        height: 120\r\n    },\r\n    addressContainer: {\r\n        width: screenWidth - 100,\r\n        borderBottomColor: 'red',\r\n        borderBottomWidth: 0.5,\r\n        padding: 5,\r\n        marginBottom: 10,\r\n        alignItems: 'center',\r\n\r\n    },\r\n    addressTitle: {\r\n        fontSize: 22,\r\n        fontWeight: '700',\r\n        color: '#7D7D7D'\r\n    },\r\n    addressText: {\r\n        fontSize: 20,\r\n        fontWeight: '200',\r\n        color: '#4F4F4F'\r\n    },\r\n\r\n    footer: {\r\n        flex: 1,\r\n    }\r\n\r\n})\r\n\r\n\r\n// chuyển State từ rootReducer => Props trong LanđingScreen\r\n\r\nconst mapToStateProps = (state: ApplicationState) => ({\r\n    userReducer: state.userReducer\r\n})\r\n\r\nconst LandingScreen = connect(mapToStateProps, { onUpdateLocation })(_LandingScreen)\r\n\r\nexport { LandingScreen }"]},"metadata":{},"sourceType":"module"}